#!/usr/bin/env ruby

## ignore rules
# ignored dirs are not built at all
ignore '/menus/**/*'
ignore '/release-notes/**/*'

## passthrough rules
# pass these files through with NO modifications whatsoever
# they are "compiled" as a no-op and routed to their exact source locations
passthrough '/google*'
passthrough '/**/raw/**/*'

## default layout is to ERB template
# if a file doesn't specify a layout rule, it means it's basic ERB
layout '/**/*', :erb

## compile rules

# static files -- leave 'em alone
compile '/static/**/*' do
end
# routing should strip '/static' off the front, so
# '/static/css/nav.css' will route to '/css/nav.css'
route '/static/**/*' do
  @item.identifier.to_s[('/static'.size)..-1]
end

# anything which is a CSS, JS, XML, or cert file is
# compiled via ERB (in case it is at all templated)
# and routed verbatim
compile '/**/*.{css,js,cert,xml}' do
  filter :erb
  layout GlobusRuleHelpers.determine_layout(@item)
end
route '/**/*.{css,js,cert,xml}' do
  @item.identifier.to_s
end

compile '/**/*.adoc' do
  filter :globus_transfer_version
  filter :asciidoc
  layout GlobusRuleHelpers.determine_layout(@item)
end

# if it didn't match a rule yet for compilation
compile '/**/*' do
  if @item.binary?
    next
  end
  filter :erb
  layout GlobusRuleHelpers.determine_layout(@item)
end

# if it didn't match any rules for routing
route '/**/*' do
  # if an arbitrary item is binary, write it verbatim
  if @item.binary?
    @item.identifier.to_s
  elsif @item.identifier.without_ext.end_with?('/index')
    @item.identifier.without_ext + '.html'
  else
    @item.identifier.without_ext + '/index.html'
  end
end
